version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: local-games-postgres
    environment:
      POSTGRES_DB: local_games
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - local-games-network

  # Redis Cache
  redis:
    image: redis:6-alpine
    container_name: local-games-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - local-games-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: local-games-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=local_games
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - PORT=8080
      - JWT_SECRET=your-secret-key-change-this-in-production
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - local-games-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: local-games-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - local-games-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: local-games-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - local-games-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  local-games-network:
    driver: bridge 